

## 🗣️ Cloud Text-to-Speech & Translation APIs Challenge Lab

🔗 Subscribe to [Arcade Genius](https://www.youtube.com/@ArcadeGenius-z1) for more labs!

---

### ✅ Environment Setup

```bash
export API_KEY=""

task_2_file_name="synthesize-text.txt"
task_3_request_file="speech_request.json"
task_3_response_file="speech_response.json"
task_4_sentence="こんにちは、世界！"
task_4_file="translated_text.txt"
task_5_sentence="Bonjour%20le%20monde"
task_5_file="detected_language.json"

export PROJECT_ID=$(gcloud config get-value project)

source venv/bin/activate
```

---

### 🧩 **Task 2: Convert Text to Speech**

```bash
cat > synthesize-text.json <<EOF
{
  "input":{
    "text":"Cloud Text-to-Speech API allows developers to include natural-sounding, synthetic human speech as playable audio in their applications. The Text-to-Speech API converts text or Speech Synthesis Markup Language (SSML) input into audio data like MP3 or LINEAR16 (the encoding used in WAV files)."
  },
  "voice":{
    "languageCode":"en-gb",
    "name":"en-GB-Standard-A",
    "ssmlGender":"FEMALE"
  },
  "audioConfig":{
    "audioEncoding":"MP3"
  }
}
EOF

curl -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" \
  -H "Content-Type: application/json; charset=utf-8" \
  -d @synthesize-text.json \
  "https://texttospeech.googleapis.com/v1/text:synthesize" \
  > "$task_2_file_name"
```

---

### 🎧 **Decode Audio File**

```bash
cat > tts_decode.py <<EOF
import argparse
from base64 import decodebytes
import json

def decode_tts_output(input_file, output_file):
    with open(input_file) as input:
        response = json.load(input)
        audio_data = response['audioContent']
        with open(output_file, "wb") as new_file:
            new_file.write(decodebytes(audio_data.encode('utf-8')))

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--input', required=True)
    parser.add_argument('--output', required=True)
    args = parser.parse_args()
    decode_tts_output(args.input, args.output)
EOF

python tts_decode.py --input "$task_2_file_name" --output "synthesize-text-audio.mp3"
```

---

### 📝 **Task 3: Transcribe Audio (Speech-to-Text API)**

```bash
audio_uri="gs://cloud-samples-data/speech/corbeau_renard.flac"

cat > "$task_3_request_file" <<EOF
{
  "config": {
    "encoding": "FLAC",
    "sampleRateHertz": 44100,
    "languageCode": "fr-FR"
  },
  "audio": {
    "uri": "$audio_uri"
  }
}
EOF

curl -s -X POST -H "Content-Type: application/json" \
  --data-binary @"$task_3_request_file" \
  "https://speech.googleapis.com/v1/speech:recognize?key=${API_KEY}" \
  -o "$task_3_response_file"
```

---

### 🌐 **Task 4: Translate Japanese to English**

```bash
sudo apt-get update
sudo apt-get install -y jq

source_lang="ja"
target_lang="en"

response=$(curl -s -X POST \
  -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" \
  -H "Content-Type: application/json; charset=utf-8" \
  -d "{\"q\": \"$task_4_sentence\"}" \
  "https://translation.googleapis.com/language/translate/v2?key=${API_KEY}&source=${source_lang}&target=${target_lang}")

if [[ $response == *"error"* ]]; then
  echo "Translation API returned an error:"
  echo "$response"
else
  translation=$(jq -r '.data.translations[].translatedText' <<< "$response")
  if [[ -z "$translation" ]]; then
    echo "Translation is empty or null."
  else
    echo "$translation" > "$task_4_file"
    echo "Translation saved to $task_4_file:"
    cat "$task_4_file"
  fi
fi
```

---

### 🔍 **Task 5: Detect Language of URL-encoded Sentence**

```bash
decoded_sentence=$(python -c "import urllib.parse; print(urllib.parse.unquote('$task_5_sentence'))")

curl -s -X POST \
  -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" \
  -H "Content-Type: application/json; charset=utf-8" \
  -d "{\"q\": [\"$decoded_sentence\"]}" \
  "https://translation.googleapis.com/language/translate/v2/detect?key=${API_KEY}" \
  -o "$task_5_file"
```

---

### 🏁 All Tasks Completed!

```
🎉 Congratulations, you're all done with the lab!

📺 Don’t forget to like, share & subscribe to [Arcade Genius](https://www.youtube.com/@ArcadeGenius-z1)

🙏 Thanks for watching!
```

